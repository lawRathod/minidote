defmodule Counter_PN_OB do
  @behaviour CRDT

  @moduledoc """
  Documentation for `Counter_PN_OB`.

  This is a convergent, replicated, operation-based PN-Counter
  """

  # ToDo: Add type spec
  @type t :: :counter_pn_ob

  def new() do
    0
  end

  # the value of the local pn counter
  def value(pn_state) when is_integer(pn_state) do
    pn_state
  end

  # Generate a downstream counter operation
  # the first parameter is either
   # :increment
   # :decrement
   # {:increment, pos_integer}
   # {:decrement, pos_integer}
  # The second parameter is the pn counter,
  # which is not needed to generate a downstream operation
  def downstream(:increment, _) do {:ok, 1} end
  def downstream(:decrement, _) do {:ok, -1} end
  def downstream({:increment, by}, _) when is_integer(by) do {:ok, by} end
  def downstream({:decrement, by}, _) when is_integer(by) do {:ok, -by} end

  ## Update a pn counter with an effect generated by downstream/2
  ## Returns the updated pn_counter state
  def update(effect, pn_state) do
    {:ok, pn_state + effect}
  end

  def equal(pn_state1, pn_state2) do
    pn_state1 === pn_state2
  end

  def require_state_downstream(_) do false end
